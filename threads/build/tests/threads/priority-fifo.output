Kernel command line: -q run priority-fifo
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  143,974,400 loops/s.
Boot complete.
Executing 'priority-fifo':
(priority-fifo) begin
(priority-fifo) 16 threads will iterate 16 times in the same order each time.
(priority-fifo) If the order varies then there is a bug.
(priority-fifo) Interrupt 0x0e (#PF Page-Fault Exception) at rip=80042136d0
 cr2=000000000000001f error=               0
rax 000000000000001f rbx 0000000000000000 rcx 0000008004000e04 rdx 0000000004000da0
rsp 0000008004235ef8 rbp 0000008004235f00 rsi 0000008004000da0 rdi 000000000000001f
rip 00000080042136d0 r8 0000000000000000  r9 0000000000000000 r10 0000000000000000
r11 0000000000000000 r12 0000000000000000 r13 0000000000000000 r14 0000000000000000
r15 0000000000000000 rflags 00000002
es: 0010 ds: 0010 cs: 0008 ss: 0010
Kernel PANIC at ../../threads/interrupt.c:361 in intr_handler(): Unexpected interrupt
Call stack: 0x8004213614 0x8004208ac1 0x8004208e73 0x8004213e27 0x8004213ecf 0x8004209c05 0x800420a0d2 0x8004219096 0x80042071d2.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 25 ticks
Thread: 0 idle ticks, 25 kernel ticks, 0 user ticks
Console: 1