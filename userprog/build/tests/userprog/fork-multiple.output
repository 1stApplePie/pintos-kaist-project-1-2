Kernel command line: -q -f put fork-multiple run fork-multiple
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  117,760,000 loops/s.
hd0:0: detected 321 sector (160 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 104 sector (52 kB) disk, model "QEMU HARDDISK", serial "QM00003"
Formatting file system...done.
Boot complete.
Putting 'fork-multiple' into the file system...
Executing 'fork-multiple':
(fork-multiple) begin
(fork-multiple) child run
child: exit(4)
(fork-multiple) Parent: child exit status is 4
(fork-multiple) child run
child: exit(5)
Interrupt 0x0d (#GP General Protection Exception) at rip=800421f69e
 cr2=0000000000000000 error=               0
rax cccccccccccccccc rbx 0000000000000000 rcx 00000080040b8000 rdx 0000000000000010
rsp 000000800424be50 rbp 000000800424be60 rsi 000000000000800f rdi cccccccccccccccc
rip 000000800421f69e r8 000000800424be08  r9 000000800421b9cb r10 0000000000000000
r11 0000000000000202 r12 000000800421d7cb r13 0000000000000000 r14 0000000000000000
r15 0000000000000000 rflags 00000286
es: 001b ds: 001b cs: 0008 ss: 0010
Kernel PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x8004218552 0x800421d4fb 0x80042093ce 0x80042097ec 0x800421f471 0x800421e085 0x800421c365 0x800420725d 0x800421daa0 0x800421d825 0x800421d6ef 0x400195 0x4001b3 0x400229 0x400cca.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 69 ticks
Thread: 30 idle ticks, 30 kernel ticks, 9 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 87 reads, 236 writes
hd1:0: 104 reads, 0 writes
Console: 1887 characters output
Key